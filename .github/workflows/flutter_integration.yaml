on:
  pull_request:
  push:
    branches:
      - main
jobs:
  flutter:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'dev', 'alpha', 'beta' default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - name: 'Install dependencies'
        run: |
          flutter pub get
          cd test_integration && flutter pub get && cd ..
          cd example && flutter pub get && cd ..

      - name: 'Check formatting issues in the code'
        run: flutter format --set-exit-if-changed .

      - name: 'Flutter analyze help'
        run: 'flutter analyze --help'

      - name: 'Statically analyze the Dart code for any errors'
        run: 'flutter analyze --no-pub --no-fatal-infos .'  # suppressing info - deprecated entries fall under info, and CI shouldn't fail if there are any Deprecated APIs

      - name: 'Run unit tests'
        run: flutter test --no-pub

  ios:
    needs: flutter
    strategy:
      matrix:
        device:
          - 'iPhone 8'  # we are not specifying the iOS version as it tends to change
          - 'iPhone 11'
      fail-fast: false
    runs-on: 'macos-latest'
    steps:
      - name: 'List Simulators'
        run: 'xcrun instruments -s'
      - name: 'Start Simulator'
        run: |
          # grep, extract trim `[` and `]` and pick first result, in case there are many
               UUID=$(
               xcrun instruments -s |
               grep "${{ matrix.device }}" |   # Grep device(s) - can expect more than one
               grep -Eo -m1 "\[.*\]" |         # Extract device ID of the first result
               sed -e 's/^\[//' -e 's/\]$//'   # Trimming the square brackets surrounding UUID
               )
               xcrun simctl boot "${UUID:?No Simulator with this name found}"
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1  # Sets up Flutter environment
        with:
          channel: 'stable'
      - name: 'Run Flutter Driver tests'
        timeout-minutes: 30
        run: |
          flutter pub get
          cd test_integration && ./run_integration_tests.sh

  android:
    needs: flutter
    strategy:
      matrix:
        api-level: [19, 22, 24, 26, 28]
      fail-fast: false
    runs-on: 'macos-latest'
    # ubuntu-latest cannot be used as it is only a docker container, and unfortunately running
    #  hardware acceleration in container is not allowed by android emulator
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      - uses: subosito/flutter-action@v1  # Sets up Flutter environment
        with:
          channel: 'stable'
      - name: 'Run Flutter Driver tests'
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@v2
        # env:
        #   ANDROID_SIGN_PWD: ${{ secrets.ANDROID_SIGN_PWD }}
        #   SECRET_REPO: ${{ secrets.SECRET_REPO }}
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN
        with:
          api-level: ${{ matrix.api-level }}
          script: |
            /Users/runner/Library/Android/sdk/tools/bin/avdmanager list
            flutter pub get
            cd test_integration && ./run_integration_tests.sh
