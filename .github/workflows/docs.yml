on:
  pull_request:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      
      - name: Get Flutter Packages
        run: flutter pub get

      - name: Install dartdoc global package via pub tool in the Flutter context
        run: |
          flutter pub global activate dartdoc

      - name: Build Documentation
        run: |
          flutter pub global run dartdoc
          ls -al doc/api

      - name: Get Pull Request Information
        id: get_pull_request_information
        if: ${{ github.event_name == 'pull_request' }}
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repository}/pulls/{pull_request_number}
          repository: ${{ github.repository }}
          pull_request_number: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Based on the approach modelled here: https://github.com/SanderKnape/pr-deployments
      # https://docs.github.com/en/rest/reference/repos#create-a-deployment
      - name: Create Deployment
        id: create_deployment
        if: ${{ github.event_name == 'pull_request' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_information.outputs.data).head.ref }}
          description: Generated API Reference Documentation
          environment: sdk-static
          auto_merge: false
          required_contexts: '[]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # re mediaType values: https://docs.github.com/en/rest/overview/api-previews
      # because, ultimatey via: https://github.com/octokit/request.js/#request
      - name: Set Deployment Status to In Progress
        if: ${{ github.event_name == 'pull_request' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          description: Uploading to Amazon S3 for presentation at sdk.ably.com ...
          environment: sdk-static
          environment_url: https://sdk.ably.com/builds/ably/ably-flutter/pull/${{ github.event.pull_request.number }}/docs/api-reference/
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Default shell is bash: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
      # jq emits `null` if the `pull_request` key is not found.
      # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#cli-tools
      # https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
      # https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html#using-s3-commands-managing-objects-sync
      # https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3/sync.html
      - name: Upload to Amazon S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_S3_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-2
        run: |
          REMOTE_PATH_SUFFIX="docs/api-reference"
          if [ $GITHUB_EVENT_PATH == "pull_request" ]; then
            PULL_REQUEST_NUMBER=`cat $GITHUB_EVENT_PATH | jq .pull_request.number`
            if [ $PULL_REQUEST_NUMBER == "null" ]; then
              echo 'Failed to find pull request number in event data.' >/dev/stderr
              exit 1
            fi
            echo "Running sync for Pull Request Number: $PULL_REQUEST_NUMBER ..."
            REMOTE_PATH="pull/$PULL_REQUEST_NUMBER/$REMOTE_PATH_SUFFIX"
          else
            echo "Running sync for main branch (assumed given the triggers configured for this workflow) ..."
            REMOTE_PATH="main/$REMOTE_PATH_SUFFIX"
          fi
          aws s3 sync --acl public-read doc/api "s3://sdk.ably.com/builds/ably/ably-flutter/$REMOTE_PATH"

      - name: Set Deployment Status to Success
        if: ${{ github.event_name == 'pull_request' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          description: Successfully uploaded to Amazon S3, presenting at sdk.ably.com
          environment: sdk-static
          environment_url: https://sdk.ably.com/builds/ably/ably-flutter/pull/${{ github.event.pull_request.number }}/docs/api-reference/
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
          mediaType: '{"previews": ["ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # The description we're using here is likely to be accurate, but bear in mind that if the previous step (set
      # deployment status to success) fails then this step will also get run.
      - name: Set Deployment Status to Failure
        uses: octokit/request-action@v2.x
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          description: Failed to upload to Amazon S3
          environment: sdk-static
          environment_url: https://sdk.ably.com/builds/ably/ably-flutter/pull/${{ github.event.pull_request.number }}/docs/api-reference/
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
          mediaType: '{"previews": ["ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
