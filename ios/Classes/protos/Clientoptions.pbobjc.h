// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientoptions.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class TokenDetails;
@class TokenParams;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum HTTPMethods

typedef GPB_ENUM(HTTPMethods) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  HTTPMethods_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  HTTPMethods_Post = 0,
  HTTPMethods_Get = 1,
};

GPBEnumDescriptor *HTTPMethods_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL HTTPMethods_IsValidValue(int32_t value);

#pragma mark - ClientoptionsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClientoptionsRoot : GPBRootObject
@end

#pragma mark - ClientOptions

typedef GPB_ENUM(ClientOptions_FieldNumber) {
  ClientOptions_FieldNumber_AuthURL = 1,
  ClientOptions_FieldNumber_AuthMethod = 2,
  ClientOptions_FieldNumber_Key = 3,
  ClientOptions_FieldNumber_TokenDetails = 4,
  ClientOptions_FieldNumber_AuthHeaders = 5,
  ClientOptions_FieldNumber_AuthParams = 6,
  ClientOptions_FieldNumber_QueryTime = 7,
  ClientOptions_FieldNumber_UseTokenAuth = 8,
  ClientOptions_FieldNumber_ClientId = 9,
  ClientOptions_FieldNumber_LogLevel = 10,
  ClientOptions_FieldNumber_Tls = 11,
  ClientOptions_FieldNumber_RestHost = 12,
  ClientOptions_FieldNumber_RealtimeHost = 13,
  ClientOptions_FieldNumber_Port = 14,
  ClientOptions_FieldNumber_TlsPort = 15,
  ClientOptions_FieldNumber_AutoConnect = 16,
  ClientOptions_FieldNumber_UseBinaryProtocol = 17,
  ClientOptions_FieldNumber_QueueMessages = 18,
  ClientOptions_FieldNumber_EchoMessages = 19,
  ClientOptions_FieldNumber_Recover = 20,
  ClientOptions_FieldNumber_Environment = 21,
  ClientOptions_FieldNumber_IdempotentRestPublishing = 22,
  ClientOptions_FieldNumber_HTTPOpenTimeout = 23,
  ClientOptions_FieldNumber_HTTPRequestTimeout = 24,
  ClientOptions_FieldNumber_HTTPMaxRetryCount = 25,
  ClientOptions_FieldNumber_RealtimeRequestTimeout = 26,
  ClientOptions_FieldNumber_FallbackHostsArray = 27,
  ClientOptions_FieldNumber_FallbackHostsUseDefault = 28,
  ClientOptions_FieldNumber_FallbackRetryTimeout = 29,
  ClientOptions_FieldNumber_DefaultTokenParams = 30,
  ClientOptions_FieldNumber_ChannelRetryTimeout = 31,
  ClientOptions_FieldNumber_TransportParams = 32,
};

@interface ClientOptions : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *authURL;

@property(nonatomic, readwrite) HTTPMethods authMethod;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, strong, null_resettable) TokenDetails *tokenDetails;
/** Test to see if @c tokenDetails has been set. */
@property(nonatomic, readwrite) BOOL hasTokenDetails;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *authHeaders;
/** The number of items in @c authHeaders without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authHeaders_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *authParams;
/** The number of items in @c authParams without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger authParams_Count;

@property(nonatomic, readwrite) BOOL queryTime;

@property(nonatomic, readwrite) BOOL useTokenAuth;

/** ClientOptions */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

@property(nonatomic, readwrite) int32_t logLevel;

/** TODO handle logHandler */
@property(nonatomic, readwrite) BOOL tls;

@property(nonatomic, readwrite, copy, null_resettable) NSString *restHost;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realtimeHost;

@property(nonatomic, readwrite) uint32_t port;

@property(nonatomic, readwrite) uint32_t tlsPort;

@property(nonatomic, readwrite) BOOL autoConnect;

@property(nonatomic, readwrite) BOOL useBinaryProtocol;

@property(nonatomic, readwrite) BOOL queueMessages;

@property(nonatomic, readwrite) BOOL echoMessages;

@property(nonatomic, readwrite, copy, null_resettable) NSString *recover;

@property(nonatomic, readwrite, copy, null_resettable) NSString *environment;

@property(nonatomic, readwrite) BOOL idempotentRestPublishing;

@property(nonatomic, readwrite) uint32_t HTTPOpenTimeout;

@property(nonatomic, readwrite) uint32_t HTTPRequestTimeout;

@property(nonatomic, readwrite) uint32_t HTTPMaxRetryCount;

@property(nonatomic, readwrite) uint32_t realtimeRequestTimeout;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *fallbackHostsArray;
/** The number of items in @c fallbackHostsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fallbackHostsArray_Count;

@property(nonatomic, readwrite) BOOL fallbackHostsUseDefault;

@property(nonatomic, readwrite) uint32_t fallbackRetryTimeout;

@property(nonatomic, readwrite, strong, null_resettable) TokenParams *defaultTokenParams;
/** Test to see if @c defaultTokenParams has been set. */
@property(nonatomic, readwrite) BOOL hasDefaultTokenParams;

@property(nonatomic, readwrite) uint32_t channelRetryTimeout;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *transportParams;
/** The number of items in @c transportParams without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transportParams_Count;

@end

/**
 * Fetches the raw value of a @c ClientOptions's @c authMethod property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ClientOptions_AuthMethod_RawValue(ClientOptions *message);
/**
 * Sets the raw value of an @c ClientOptions's @c authMethod property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetClientOptions_AuthMethod_RawValue(ClientOptions *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
